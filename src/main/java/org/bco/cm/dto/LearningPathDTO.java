/*
 * The MIT License
 *
 * Copyright 2018 Andr√© H. Juffer, Biocenter Oulu
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

package org.bco.cm.dto;

import com.fasterxml.jackson.annotation.JsonIgnore;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * DTO for LearningPath.
 * @author Andr&#233; H. Juffer, Biocenter Oulu
 */
@Entity( name = "LearningPathDTO" )
@Table( name = "learning_paths" )
public class LearningPathDTO {
    
    private UUID id_;
    private List<OnlineMaterialDTO> materials_;
    
    private ModuleDTO module_;
    
    public LearningPathDTO()
    {
        id_ = null;
        materials_ = new ArrayList<>();
        module_ = null;
    }
    
    private void setId(UUID id)
    {
        id_ = id;
    }
    
    /**
     * Returns identifier as generated by repository.
     * @return Identifier value.
     */
    @Id
    @GeneratedValue
    protected UUID getId()
    {
        return id_;
    }    
    
    public void addOnlineMaterial(OnlineMaterialDTO material)
    {
        materials_.add(material);
    }
    
    public void setOnlineMaterials(List<OnlineMaterialDTO> materials)
    {
        if ( materials != null ) {
            materials_ = materials;
            materials_.forEach(material -> {
                material.setLearningPath(this);
            });
        }
    }
    
    @OneToMany(
        mappedBy = "learningPath",
        cascade = CascadeType.ALL, 
        orphanRemoval = true 
    )
    public List<OnlineMaterialDTO> getOnlineMaterials()
    {
        return materials_;
    }
    
    public void setModule(ModuleDTO module)
    {
        module_ = module;
    }
    
    @OneToOne()
    @JoinColumn( name = "module_id" )
    @JsonIgnore
    public ModuleDTO getModule()
    {
        return module_;
    }
    
    @Override
    public String toString()
    {
        String newline = System.getProperty("line.separator");
        StringBuilder s = new StringBuilder("LearningPathDTO : {").append(newline);
        s.append("onlineMaterials - ").append(materials_).append(newline);
        s.append("}");
        return s.toString();
    }

}
