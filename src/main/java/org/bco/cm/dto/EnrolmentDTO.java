/*
 * The MIT License
 *
 * Copyright 2018 Andr√© H. Juffer, Biocenter Oulu
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

package org.bco.cm.dto;

import java.time.Instant;
import java.util.UUID;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;
import org.hibernate.annotations.NaturalId;
import java.io.Serializable;

/**
 * DTO for Enrolment.
 * @author Andr&#233; H. Juffer, Biocenter Oulu
 */
@Entity( name = "EnrolmentDTO" )
@Table( name = "enrolments" )
public class EnrolmentDTO implements Serializable
{
    private UUID id_;
    private String eid_;
    private String courseId_;
    private String studentId_;
    private Instant dateOfRegistration_;
    
    public EnrolmentDTO()
    {
        eid_ = null;
        courseId_ = null;
        studentId_ = null;
        dateOfRegistration_ = Instant.ofEpochMilli(0);
    }
    
    private void setId(UUID id)
    {
        id_ = id;
    }
    
    /**
     * Returns identifier assigned or generated by repository.
     * @return Identifier.
     */
    @Id
    @GeneratedValue
    protected UUID getId()
    {
        return id_;
    }
    
    public void setEnrolmentNumber(String eid)
    {
        eid_ = eid;
    }
    
    @Column( name = "enrolment_number" )
    @NaturalId
    public String getEnrolmentNumber()
    {
        return eid_;
    }
    
    public void setCourseId(String courseId)
    {
        courseId_ = courseId;
    }
    
    @Column( name = "course_id" )
    public String getCourseId()
    {
        return courseId_;
    }    
    
    public void setStudentId(String studentId)
    {
        studentId_ = studentId;
    }
    
    @Column( name = "student_id" )
    public String getStudentId()
    {
        return studentId_;
    }
    
    public void setDateOfRegistration(Instant date)
    {
        dateOfRegistration_ = date;
    }
    
    @Transient
    public Instant getDateOfRegistration()
    {
        return dateOfRegistration_;
    }
    
    public void setDateOfRegistrationTimestamp(Long timestamp)
    {
        dateOfRegistration_ = Instant.ofEpochMilli(timestamp);
    }
    
    @Column ( name = "date_of_registration" )
    public Long getDateOfRegistrationTimestamp()
    {
        return dateOfRegistration_.toEpochMilli();
    }
    
    @Override
    public String toString()
    {
        String newline = System.getProperty("line.separator");
        StringBuilder s = new StringBuilder("EnrolmentDTO : {").append(newline);
        s.append("eid - ").append(eid_).append(newline);
        s.append("courseId - ").append(courseId_).append(newline);
        s.append("studentId - ").append(studentId_).append(newline);
        s.append("dateOfRegistration - ").append(dateOfRegistration_).append(newline);
        s.append("}");
        return s.toString();
    }
}
